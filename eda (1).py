# -*- coding: utf-8 -*-
"""EDA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14pxgbFH1LLP1CE2ZffPlil53TK0xpsPg
"""

import pandas as pd
import numpy as np
import seaborn as sn
import matplotlib.pyplot as plt

df = pd.read_csv('/content/zomato.csv',encoding ='latin-1')
df.head()

df.columns

df.shape

df.info()

df.describe()

#Data Analysis
#1.Missing Values
#2.Explore numerical Categorical Description
#3.Explore categorical variables
#4.Relationship between two variables

df.isnull().sum()

[features for features in df.columns if df[features].isnull().sum() > 0]

df_country = pd.read_excel('/content/Country-Code.xlsx')
df_country.head()

df.columns

df_final = pd.merge(df,df_country,on='Country Code',how='left')
df_final.head(2)

df.dtypes

df_final.columns

country_names = df_final.Country.value_counts().index

country_values = df_final.Country.value_counts().values

#Pie Chart- top 3 countries that uses Zomato

plt.pie(country_values[:3],labels=country_names[:3],autopct='%1.2f%%')

"""Zomato maximum record or transactions are from India
then USA
then UK
"""

##Numerical variables

df_final.columns

ratings = df_final.groupby(['Aggregate rating','Rating color','Rating text']).size().reset_index().rename(columns={0:'Rating Count'})

ratings

#Observations
#1.When rating is between 4.5 to 4.9 -> Excellent
#2.When rating is between 4.0 to 3.9 -> Very good
#3.When rating is between 3.5 to 3.9 -> Good
#4.When rating is between 3.0 to 3.4 -> Average
#5.When rating is between 2.0 to 2.4 -> Poor

ratings.head()

import matplotlib
matplotlib.rcParams['figure.figsize'] = (12,6)
sn.barplot(x="Aggregate rating",y="Rating Count",data=ratings)

#Observation:
#1.Not Rated count is very high
#2. Max no. of ratings are between 2.5 to 3.4

sn.barplot(x="Aggregate rating",
y="Rating Count",hue='Rating color',data=ratings,
palette=['blue','red','orange','yellow',
'green','green'])

#Count Plot
sn.countplot(x='Rating color',data=ratings,palette=['blue','red','orange','yellow',
'green','green'])

#find country names that has given 0 rating

df_final.groupby(['Aggregate rating','Country']).size().reset_index().head(5)

"""Observations: Max no. of 0 ratings are from Indian customers

"""

df_final[['Country','Currency']].groupby(['Country','Currency']).size().reset_index()

#Which countries have online delivery option

df_final[['Has Online delivery','Country']].groupby(['Has Online delivery','Country']).size().reset_index()

#Find top 10 cuisines
top10_cuisines = df_final['Cuisines'].value_counts()[:10].sort_values(ascending=True)
top10_cuisines

plt.pie(top10_cuisines[:10],labels=top10_cuisines[:10],autopct='%1.2f%%')